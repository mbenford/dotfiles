#!/usr/bin/env python
from subprocess import Popen, DEVNULL
from os import getenv, path
from pathlib import Path
from functools import partial
from rofi import Rofi

terminal = getenv("TERMINAL")
editor = getenv("EDITOR")
home = Path.home()
basedir = f"{home}/dev"
apps = [
    dict(path=terminal, name="Terminal"),
    dict(path=editor, name="Default editor"),
    dict(path="/usr/bin/xdg-open", name="Default file manager"),
    dict(path="/usr/bin/code", name="Visual Studio Code"),
    dict(path=f"{home}/.local/bin/goland", name="JetBrains GoLand"),
    dict(path=f"{home}/.local/bin/webstorm", name="JetBrains WebStorm"),
    dict(path=f"{home}/.local/bin/pycharm", name="JetBrains PyCharm"),
]


def generate(rofi):
    def walk(root):
        for entry in Path(root).iterdir():
            if entry.is_file():
                continue

            if path.isdir(path.join(entry, ".git")):
                yield entry
            else:
                yield from walk(entry)

    for project in sorted(walk(basedir), key=path.basename):
        rofi.row(f"{path.basename(project): <20} {path.dirname(project)}", info=project)


def process(rofi):
    if len(rofi.info()) == 1:
        rofi.prompt("apps")
        rofi.message(f"project: {rofi.info(0)}")

        for app in apps:
            rofi.row(f"{path.basename(app['path']): <20} {app['name']}", info=app["path"])
    else:
        project, app = rofi.info()
        popen = partial(Popen, cwd=project, shell=True, stdout=DEVNULL)

        if app == terminal:
            popen(terminal)
        elif app == editor:
            popen(f"{terminal} {editor} {project}")
        else:
            popen(f"{app} {project}")


if __name__ == "__main__":
    r = Rofi()
    r.custom_entry(False)
    r.handle_startup(generate, process)
